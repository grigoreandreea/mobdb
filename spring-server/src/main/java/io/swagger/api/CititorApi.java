/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CITITORITEM;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-16T16:00:11.731Z")

@Validated
@Api(value = "cititor", description = "the cititor API")
@RequestMapping(value = "/ords/testuser2")
public interface CititorApi {

    @ApiOperation(value = "", nickname = "cititorBatchloadPost", notes = "Create new records on CITITOR", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The status of the processed records.", response = String.class) })
    @RequestMapping(value = "/cititor/batchload",
        produces = { "text/plain" }, 
        consumes = { "text/csv" },
        method = RequestMethod.POST)
    ResponseEntity<String> cititorBatchloadPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Object payload);


    @ApiOperation(value = "", nickname = "cititorGet", notes = "Retrieve records from CITITOR", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The queried record.", response = Object.class) })
    @RequestMapping(value = "/cititor",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Object> cititorGet();


    @ApiOperation(value = "", nickname = "cititorIdDelete", notes = "Remove a record from CITITOR", response = CITITORITEM.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Deleted result.", response = CITITORITEM.class) })
    @RequestMapping(value = "/cititor/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<CITITORITEM> cititorIdDelete(@Pattern(regexp="^[^/]+$") @ApiParam(value = "implicit",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "cititorIdGet", notes = "Retrieve a record from CITITOR", response = CITITORITEM.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The queried record.", response = CITITORITEM.class) })
    @RequestMapping(value = "/cititor/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CITITORITEM> cititorIdGet(@Pattern(regexp="^[^/]+$") @ApiParam(value = "implicit",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "cititorIdPut", notes = "Create or update a record on CITITOR", response = CITITORITEM.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The successfully updated record.", response = CITITORITEM.class),
        @ApiResponse(code = 201, message = "The successfully created record.", response = CITITORITEM.class) })
    @RequestMapping(value = "/cititor/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<CITITORITEM> cititorIdPut(@Pattern(regexp="^[^/]+$") @ApiParam(value = "implicit",required=true) @PathVariable("id") String id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody CITITORITEM payload);


    @ApiOperation(value = "", nickname = "cititorPost", notes = "Create a new record on CITITOR", response = CITITORITEM.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "The successfully created record.", response = CITITORITEM.class) })
    @RequestMapping(value = "/cititor",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<CITITORITEM> cititorPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CITITORITEM payload);

}
